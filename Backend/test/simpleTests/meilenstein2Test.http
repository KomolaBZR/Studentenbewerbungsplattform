###
GET http://localhost/api/publicUsers
// Login mit Basic Authentication als admin mit korrekten Credentials admin:123
###
# @name loginAdminCorrect
GET http://localhost/api/authenticate
Authorization: Basic YWRtaW46MTIz

// Login mit Basic Authentication als admin mit  admin:123
###
# @name loginAdminCorrect
GET http://localhost/api/authenticate
Authorization: Basic admin:123


// Login mit Basic Authentication als admin mit falschen Credentials
// Hinweis: Der REST-Client überführt das Passwort automatisch nach Base64
###
GET http://localhost/api/authenticate
Authorization: Basic admin:asdf

@adminToken = {{loginAdminCorrect.response.headers.Authorization}}

### Auflisten aller Nutzer, ohne dass ein Token übergeben wird --> Anfrage scheitert mit 401 
http://localhost/api/users

### Auflisten aller Nutzer mit Token von admin
http://localhost/api/users
Authorization: {{adminToken}}

### Lege neuen user manfred an
POST http://localhost/api/users
Authorization: {{adminToken}}
Content-Type: application/json

{
    "userID": "manfred",
    "firstName": "Manfred",
    "lastName": "Mustermann",
    "password": "asdf"
}

### Abrufen des angelegten Users mit dem Admin-Token
GET http://localhost/api/users/manfred
Authorization: {{adminToken}}

// Ändere beim zweiten User den User-Name. Zur Selektion des Users verwende die userID.
###
PUT http://localhost/api/users/manfred
Content-Type: application/json
Authorization: {{adminToken}}

{
    "firstName": "Sandra",
    "lastName": "Meier"
}

// Login mit Basic Authentication als manfred mit korrekten Credentials
###
# @name loginManfredCorrect
GET http://localhost/api/authenticate
Authorization: Basic manfred:asdf

@manfredToken = {{loginManfredCorrect.response.headers.Authorization}}

// Ändere beim zweiten User den User-Name. - false
###

PUT http://localhost/api/users/manfred
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJtYW5mcmVkIiwiZmlyc3ROYW1lIjoiU2FuZHJhIiwibGFzdE5hbWUiOiJNZWllciIsImlzQWRtaW5pc3RyYXRvciI6ZmFsc2UsImlhdCI6MTY4NDE3NTI0NiwiZXhwIjoxNjg1ODU5NzIyMDQ5fQ.T_YTGOJL_4Co0__Nejv07jytqx5ME7tG5lN5rk1U4is

{
    "firstName": "Alex",
    "lastName": "Müller"
}

// Ändere password. - false
###

PUT http://localhost/api/users/manfred
Content-Type: application/json
Authorization: Bearer eyJhbGciOissIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJhZG1pbiIsImZpcnN0TmFtZSI6IkRlZmF1bHRBZG1pbmlzdHJhdG9yIiwibGFzdE5hbWUiOiJBY2NvdW50IiwiaXNBZG1pbmlzdHJhdG9yIjp0cnVlLCJpYXQiOjE2ODQxNDcyMjcsImV4cCI6MTY4NTgzMTY3NDk1MX0.0IPFSjron6J_UpHGopgM0k0vnSNTNgTAOpa7chEBxEc

{
    "password": "alex"
}


### Auflisten aller Nutzer mit Token von manfred, das sollte nicht möglich sein
GET http://localhost/api/users
Authorization: {{manfredToken}}

### Auflisten aller Studiengänge
GET http://localhost/api/degreeCourses
Authorization: {{adminToken}}

// Lege einen Studiengang an
###
# @name createDegreeCourseRequestRight
POST http://127.0.0.1/api/degreeCourses
Authorization: {{adminToken}}
Content-Type: application/json

{
    "universityName": "Beuth Hochschule für Technik Berlin",
    "universityShortName": "Beuth HS",
    "departmentName": "Informatik und Medien",
    "departmentShortName": "FB VI",
    "name": "Orchideenzucht Bachelor",
    "shortName": "OZ-BA"
}
###
@degreeCourseID = {{createDegreeCourseRequestRight.response.body._id}}

// Lege einen Studiengang an -not admin
###
# @name createDegreeCourseRequest
POST http://127.0.0.1/api/degreeCourses
Authorization: {{manfredToken}}
Content-Type: application/json

{
    "universityName": "Hochschule",
    "universityShortName": "FU",
    "departmentName": "Informatik",
    "departmentShortName": "FB VI",
    "name": "Bachelor",
    "shortName": "BA"
}




// Lege einen Studiengang an -not admin - false
###
# @name createDegreeCourseRequest
POST http://127.0.0.1/api/degreeCourses
Content-Type: application/json

{
    "universityName": "Hochschule",
    "universityShortName": "FU",
    "departmentName": "Informatik",
    "departmentShortName": "FB VI",
    "name": "Bachelor",
    "shortName": "BA"
}

### Auflisten aller Studiengänge, es sollte jetzt einen geben
http://localhost/api/degreeCourses
Authorization: {{adminToken}}

### Abrufen von dem angelegten Studiengang
http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}


### Ändere den Namen des Studiengangs
PUT http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}
Content-Type: application/json

{
    "name": "Tulpenzucht"
}

### Auflisten der Studiengänge einer bestimmten Hochschule
GET http://localhost/api/degreeCourses?universityShortName=Beuth HS
Authorization: {{adminToken}}

### Lösche den angelegten Studiengang
DELETE http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}

### Lösche den User manfred
DELETE http://localhost/api/users/manfred
Authorization: {{adminToken}}